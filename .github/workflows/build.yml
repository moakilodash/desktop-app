name: 'Build'

on:
  push:
    branches:
      - build
  workflow_dispatch:

jobs:
  build-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-1 librsvg2-dev patchelf libglib2.0-dev libgtk-3-dev 

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install frontend dependencies
        run: pnpm install

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: |
            See the assets to download and install this version.
            
            Changes in this version:
            - Built from build branch
            - Includes macOS (Intel + Apple Silicon) and Linux builds
            
            SHA256 checksums:
            ```
            ${sha256}
            ```
            
            This release is signed with GPG key: ${{ secrets.GPG_KEY_ID }}
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

      - name: Sign artifacts
        run: |
          # Set target-specific directory
          if [[ "${{ matrix.platform }}" == "macos-latest" ]]; then
            if [[ "${{ matrix.args }}" == "--target aarch64-apple-darwin" ]]; then
              BUNDLE_DIR="src-tauri/target/aarch64-apple-darwin/release/bundle"
            else
              BUNDLE_DIR="src-tauri/target/x86_64-apple-darwin/release/bundle"
            fi
          else
            BUNDLE_DIR="src-tauri/target/release/bundle"
          fi
          
          cd "$BUNDLE_DIR"
          
          # Sign macOS artifacts
          if [ -d "macos" ]; then
            find macos -type f -name "*.app" -o -name "*.dmg" | while read file; do
              gpg --detach-sign --armor "$file"
            done
          fi
          
          # Sign Linux artifacts
          if [ -f "appimage/kaleidoswap_amd64.AppImage" ]; then
            gpg --detach-sign --armor "appimage/kaleidoswap_amd64.AppImage"
          fi
          
          if [ -f "deb/kaleidoswap_amd64.deb" ]; then
            gpg --detach-sign --armor "deb/kaleidoswap_amd64.deb"
          fi
          
          # Generate SHA256 checksums for all artifacts
          echo "Generating checksums..."
          find . -type f \( -name "*.dmg" -o -name "*.app.tar.gz" -o -name "*.AppImage" -o -name "*.deb" \) -exec sha256sum {} \; > SHA256SUMS
          gpg --detach-sign --armor SHA256SUMS

      - name: Upload signature files
        uses: actions/upload-artifact@v4
        with:
          name: signatures-${{ matrix.platform }}
          path: |
            ${{ matrix.platform == 'macos-latest' && matrix.args == '--target aarch64-apple-darwin' && 'src-tauri/target/aarch64-apple-darwin/release/bundle/**/*.asc' || matrix.platform == 'macos-latest' && matrix.args == '--target x86_64-apple-darwin' && 'src-tauri/target/x86_64-apple-darwin/release/bundle/**/*.asc' || 'src-tauri/target/release/bundle/**/*.asc' }}
            ${{ matrix.platform == 'macos-latest' && matrix.args == '--target aarch64-apple-darwin' && 'src-tauri/target/aarch64-apple-darwin/release/bundle/SHA256SUMS*' || matrix.platform == 'macos-latest' && matrix.args == '--target x86_64-apple-darwin' && 'src-tauri/target/x86_64-apple-darwin/release/bundle/SHA256SUMS*' || 'src-tauri/target/release/bundle/SHA256SUMS*' }} 